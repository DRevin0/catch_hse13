#!/bin/bash

#проверка заполнения
check_folder_usage() {
    local folder_path="$1"
    local threshold="$2"

    local folder_size=$(du -sb "$folder_path" | awk '{print $1}')
    local total_size=$(df -B1 "$folder_path" | awk 'NR==2 {print $2}')

    local usage_precent=$(echo "scale=2; ($folder_size * 100 / $total_size)" | bc)

    if (( $(echo "$usage_precent > $threshold" | bc -l) )); then
        echo "Папка $folder_path заполнена более чем на $threshold%."
        return 1  
    else
        echo "Папка $folder_path заполнена менее чем на $threshold%."
        return 0  
    fi
}

#архивация и удаление
archive_and_delete_folder() {
    local folder_path="$1"
    local backup_path="$2"
    local threshold="$3"

    if check_folder_usage "$folder_path" "$threshold"; then
        return 
    fi

    while true; do
        oldest_file=$(find "$folder_path" -type f -printf '%T@ %p\n' | sort -n | head -1 | cut -d' ' -f2-)

        if [ -z "$oldest_file" ]; then
            break 
        fi

        file_name=$(basename "$oldest_file")

        tar -czf "$backup_path/$file_name.tar.gz" --transform 's|.*/||' "$oldest_file"
        rm -f "$oldest_file"
        echo "Файл $oldest_file был заархивирован и удалён."

        if check_folder_usage "$folder_path" "$threshold"; then
            break 
        fi
    done

    echo "Процесс архивации и удаления завершён."
}

read -p "Введите путь к папке: " folder_path
read -p "Введите путь к папке для резервных копий: " backup_path
read -p "Введите пороговое значение в процентах: " threshold

if check_folder_usage "$folder_path" "$threshold"; then
    echo "Папка не нуждается в очистке."  
else
    archive_and_delete_folder "$folder_path" "$backup_path" "$threshold"  
fi